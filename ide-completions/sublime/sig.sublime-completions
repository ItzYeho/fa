{
    "scope": "source.hjson meta.structure.dictionary.hjson meta.structure.key-value.hjson meta.structure.array.hjson", 
    "completions": [
        {
            "kind": "snippet", 
            "trigger": "add", 
            "contents": "add ${1:value}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "add-offset-range", 
            "contents": "add-offset-range ${1:start} ${2:end} ${3:step}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "align", 
            "contents": "align ${1:value}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "argument", 
            "contents": "argument ${1:arg}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "b", 
            "contents": "b ${1:label}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "back", 
            "contents": "back ${1:amount}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "clear", 
            "contents": "clear "
        }, 
        {
            "kind": "snippet", 
            "trigger": "find", 
            "contents": "find ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "find-bytes", 
            "contents": "find-bytes ${1:hex_str}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "find-bytes-ida", 
            "contents": "find-bytes-ida ${1:expression}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "find-immediate", 
            "contents": "find-immediate ${1:expression}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "find-str", 
            "contents": "find-str --null-terminated ${1:hex_str}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "function-end", 
            "contents": "function-end "
        }, 
        {
            "kind": "snippet", 
            "trigger": "function-lines", 
            "contents": "function-lines --after | --before"
        }, 
        {
            "kind": "snippet", 
            "trigger": "function-start", 
            "contents": "function-start ${1:cmd} ${2:cmd} ..."
        }, 
        {
            "kind": "snippet", 
            "trigger": "goto-ref", 
            "contents": "goto-ref --code --data"
        }, 
        {
            "kind": "snippet", 
            "trigger": "intersect", 
            "contents": "intersect ${1:variables} ${2:variables} ..."
        }, 
        {
            "kind": "snippet", 
            "trigger": "keystone-find-opcodes", 
            "contents": "keystone-find-opcodes --bele --or ${1:arch} ${2:mode} ${3:code}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "keystone-verify-opcodes", 
            "contents": "keystone-verify-opcodes --bele --until ${1:UNTIL} ${2:arch} ${3:mode} ${4:code}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "load", 
            "contents": "load ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "locate", 
            "contents": "locate ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "make-code", 
            "contents": "make-code "
        }, 
        {
            "kind": "snippet", 
            "trigger": "make-comment", 
            "contents": "make-comment ${1:comment}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "make-function", 
            "contents": "make-function "
        }, 
        {
            "kind": "snippet", 
            "trigger": "make-literal", 
            "contents": "make-literal "
        }, 
        {
            "kind": "snippet", 
            "trigger": "make-unknown", 
            "contents": "make-unknown "
        }, 
        {
            "kind": "snippet", 
            "trigger": "max-xrefs", 
            "contents": "max-xrefs "
        }, 
        {
            "kind": "snippet", 
            "trigger": "min-xrefs", 
            "contents": "min-xrefs "
        }, 
        {
            "kind": "snippet", 
            "trigger": "most-common", 
            "contents": "most-common "
        }, 
        {
            "kind": "snippet", 
            "trigger": "offset", 
            "contents": "offset ${1:offset}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "operand", 
            "contents": "operand ${1:op}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "print", 
            "contents": "print ${1:phrase}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "python-if", 
            "contents": "python-if ${1:cond} ${2:label}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "run", 
            "contents": "run ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "set-const", 
            "contents": "set-const ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "set-enum", 
            "contents": "set-enum ${1:enum_name} ${2:enum_key}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "set-name", 
            "contents": "set-name ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "set-struct-member", 
            "contents": "set-struct-member ${1:struct_name} ${2:member_name} ${3:member_type}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "set-type", 
            "contents": "set-type ${1:type_str}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "single", 
            "contents": "single ${1:index}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "sort", 
            "contents": "sort "
        }, 
        {
            "kind": "snippet", 
            "trigger": "stop-if-empty", 
            "contents": "stop-if-empty "
        }, 
        {
            "kind": "snippet", 
            "trigger": "store", 
            "contents": "store ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "trace", 
            "contents": "trace "
        }, 
        {
            "kind": "snippet", 
            "trigger": "unique", 
            "contents": "unique "
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-aligned", 
            "contents": "verify-aligned ${1:value}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-bytes", 
            "contents": "verify-bytes ${1:hex_str}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-name", 
            "contents": "verify-name ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-operand", 
            "contents": "verify-operand --op0 ${1:OP0} --op1 ${2:OP1} --op2 ${3:OP2} ${4:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-ref", 
            "contents": "verify-ref --code --data --name ${1:NAME}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-segment", 
            "contents": "verify-segment ${1:name}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-single", 
            "contents": "verify-single "
        }, 
        {
            "kind": "snippet", 
            "trigger": "verify-str", 
            "contents": "verify-str --null-terminated ${1:hex_str}"
        }, 
        {
            "kind": "snippet", 
            "trigger": "xref", 
            "contents": "xref "
        }, 
        {
            "kind": "snippet", 
            "trigger": "xrefs-to", 
            "contents": "xrefs-to --function-start --or --and --name ${1:NAME}                --bytes ${2:BYTES}"
        }
    ]
}